Help on module streamserialize:

NAME
    streamserialize

FILE
    /home/fanatic/PycharmProjects/python_lab1/streamserialize.py

CLASSES
    _io.StringIO(_io._TextIOBase)
        JsonStream
        PickleStream
        YamlStream
    
    class JsonStream(_io.StringIO)
     |  Method resolution order:
     |      JsonStream
     |      _io.StringIO
     |      _io._TextIOBase
     |      _io._IOBase
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  read(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io.StringIO:
     |  
     |  __getstate__(...)
     |  
     |  __init__(...)
     |      x.__init__(...) initializes x; see help(type(x)) for signature
     |  
     |  __setstate__(...)
     |  
     |  close(...)
     |      Close the IO object. Attempting any further operation after the
     |      object is closed will raise a ValueError.
     |      
     |      This method has no effect if the file is already closed.
     |  
     |  getvalue(...)
     |      Retrieve the entire contents of the object.
     |  
     |  next(...)
     |      x.next() -> the next value, or raise StopIteration
     |  
     |  readable(...)
     |      readable() -> bool. Returns True if the IO object can be read.
     |  
     |  readline(...)
     |      Read until newline or EOF.
     |      
     |      Returns an empty string if EOF is hit immediately.
     |  
     |  seek(...)
     |      Change stream position.
     |      
     |      Seek to character offset pos relative to position indicated by whence:
     |          0  Start of stream (the default).  pos should be >= 0;
     |          1  Current position - pos must be 0;
     |          2  End of stream - pos must be 0.
     |      Returns the new absolute position.
     |  
     |  seekable(...)
     |      seekable() -> bool. Returns True if the IO object can be seeked.
     |  
     |  tell(...)
     |      Tell the current file position.
     |  
     |  truncate(...)
     |      Truncate size to pos.
     |      
     |      The pos argument defaults to the current file position, as
     |      returned by tell().  The current file position is unchanged.
     |      Returns the new absolute position.
     |  
     |  writable(...)
     |      writable() -> bool. Returns True if the IO object can be written.
     |  
     |  write(...)
     |      Write string to file.
     |      
     |      Returns the number of characters written, which is always equal to
     |      the length of the string.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _io.StringIO:
     |  
     |  closed
     |  
     |  line_buffering
     |  
     |  newlines
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from _io.StringIO:
     |  
     |  __new__ = <built-in method __new__ of type object>
     |      T.__new__(S, ...) -> a new object with type S, a subtype of T
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io._TextIOBase:
     |  
     |  detach(...)
     |      Separate the underlying buffer from the TextIOBase and return it.
     |      
     |      After the underlying buffer has been detached, the TextIO is in an
     |      unusable state.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _io._TextIOBase:
     |  
     |  encoding
     |      Encoding of the text stream.
     |      
     |      Subclasses should override.
     |  
     |  errors
     |      The error setting of the decoder or encoder.
     |      
     |      Subclasses should override.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io._IOBase:
     |  
     |  __enter__(...)
     |  
     |  __exit__(...)
     |  
     |  __iter__(...)
     |      x.__iter__() <==> iter(x)
     |  
     |  fileno(...)
     |      Returns underlying file descriptor if one exists.
     |      
     |      An IOError is raised if the IO object does not use a file descriptor.
     |  
     |  flush(...)
     |      Flush write buffers, if applicable.
     |      
     |      This is not implemented for read-only and non-blocking streams.
     |  
     |  isatty(...)
     |      Return whether this is an 'interactive' stream.
     |      
     |      Return False if it can't be determined.
     |  
     |  readlines(...)
     |      Return a list of lines from the stream.
     |      
     |      hint can be specified to control the number of lines read: no more
     |      lines will be read if the total size (in bytes/characters) of all
     |      lines so far exceeds hint.
     |  
     |  writelines(...)
    
    class PickleStream(_io.StringIO)
     |  Method resolution order:
     |      PickleStream
     |      _io.StringIO
     |      _io._TextIOBase
     |      _io._IOBase
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  read(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io.StringIO:
     |  
     |  __getstate__(...)
     |  
     |  __init__(...)
     |      x.__init__(...) initializes x; see help(type(x)) for signature
     |  
     |  __setstate__(...)
     |  
     |  close(...)
     |      Close the IO object. Attempting any further operation after the
     |      object is closed will raise a ValueError.
     |      
     |      This method has no effect if the file is already closed.
     |  
     |  getvalue(...)
     |      Retrieve the entire contents of the object.
     |  
     |  next(...)
     |      x.next() -> the next value, or raise StopIteration
     |  
     |  readable(...)
     |      readable() -> bool. Returns True if the IO object can be read.
     |  
     |  readline(...)
     |      Read until newline or EOF.
     |      
     |      Returns an empty string if EOF is hit immediately.
     |  
     |  seek(...)
     |      Change stream position.
     |      
     |      Seek to character offset pos relative to position indicated by whence:
     |          0  Start of stream (the default).  pos should be >= 0;
     |          1  Current position - pos must be 0;
     |          2  End of stream - pos must be 0.
     |      Returns the new absolute position.
     |  
     |  seekable(...)
     |      seekable() -> bool. Returns True if the IO object can be seeked.
     |  
     |  tell(...)
     |      Tell the current file position.
     |  
     |  truncate(...)
     |      Truncate size to pos.
     |      
     |      The pos argument defaults to the current file position, as
     |      returned by tell().  The current file position is unchanged.
     |      Returns the new absolute position.
     |  
     |  writable(...)
     |      writable() -> bool. Returns True if the IO object can be written.
     |  
     |  write(...)
     |      Write string to file.
     |      
     |      Returns the number of characters written, which is always equal to
     |      the length of the string.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _io.StringIO:
     |  
     |  closed
     |  
     |  line_buffering
     |  
     |  newlines
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from _io.StringIO:
     |  
     |  __new__ = <built-in method __new__ of type object>
     |      T.__new__(S, ...) -> a new object with type S, a subtype of T
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io._TextIOBase:
     |  
     |  detach(...)
     |      Separate the underlying buffer from the TextIOBase and return it.
     |      
     |      After the underlying buffer has been detached, the TextIO is in an
     |      unusable state.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _io._TextIOBase:
     |  
     |  encoding
     |      Encoding of the text stream.
     |      
     |      Subclasses should override.
     |  
     |  errors
     |      The error setting of the decoder or encoder.
     |      
     |      Subclasses should override.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io._IOBase:
     |  
     |  __enter__(...)
     |  
     |  __exit__(...)
     |  
     |  __iter__(...)
     |      x.__iter__() <==> iter(x)
     |  
     |  fileno(...)
     |      Returns underlying file descriptor if one exists.
     |      
     |      An IOError is raised if the IO object does not use a file descriptor.
     |  
     |  flush(...)
     |      Flush write buffers, if applicable.
     |      
     |      This is not implemented for read-only and non-blocking streams.
     |  
     |  isatty(...)
     |      Return whether this is an 'interactive' stream.
     |      
     |      Return False if it can't be determined.
     |  
     |  readlines(...)
     |      Return a list of lines from the stream.
     |      
     |      hint can be specified to control the number of lines read: no more
     |      lines will be read if the total size (in bytes/characters) of all
     |      lines so far exceeds hint.
     |  
     |  writelines(...)
    
    class YamlStream(_io.StringIO)
     |  Method resolution order:
     |      YamlStream
     |      _io.StringIO
     |      _io._TextIOBase
     |      _io._IOBase
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  read(self)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io.StringIO:
     |  
     |  __getstate__(...)
     |  
     |  __init__(...)
     |      x.__init__(...) initializes x; see help(type(x)) for signature
     |  
     |  __setstate__(...)
     |  
     |  close(...)
     |      Close the IO object. Attempting any further operation after the
     |      object is closed will raise a ValueError.
     |      
     |      This method has no effect if the file is already closed.
     |  
     |  getvalue(...)
     |      Retrieve the entire contents of the object.
     |  
     |  next(...)
     |      x.next() -> the next value, or raise StopIteration
     |  
     |  readable(...)
     |      readable() -> bool. Returns True if the IO object can be read.
     |  
     |  readline(...)
     |      Read until newline or EOF.
     |      
     |      Returns an empty string if EOF is hit immediately.
     |  
     |  seek(...)
     |      Change stream position.
     |      
     |      Seek to character offset pos relative to position indicated by whence:
     |          0  Start of stream (the default).  pos should be >= 0;
     |          1  Current position - pos must be 0;
     |          2  End of stream - pos must be 0.
     |      Returns the new absolute position.
     |  
     |  seekable(...)
     |      seekable() -> bool. Returns True if the IO object can be seeked.
     |  
     |  tell(...)
     |      Tell the current file position.
     |  
     |  truncate(...)
     |      Truncate size to pos.
     |      
     |      The pos argument defaults to the current file position, as
     |      returned by tell().  The current file position is unchanged.
     |      Returns the new absolute position.
     |  
     |  writable(...)
     |      writable() -> bool. Returns True if the IO object can be written.
     |  
     |  write(...)
     |      Write string to file.
     |      
     |      Returns the number of characters written, which is always equal to
     |      the length of the string.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _io.StringIO:
     |  
     |  closed
     |  
     |  line_buffering
     |  
     |  newlines
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from _io.StringIO:
     |  
     |  __new__ = <built-in method __new__ of type object>
     |      T.__new__(S, ...) -> a new object with type S, a subtype of T
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io._TextIOBase:
     |  
     |  detach(...)
     |      Separate the underlying buffer from the TextIOBase and return it.
     |      
     |      After the underlying buffer has been detached, the TextIO is in an
     |      unusable state.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _io._TextIOBase:
     |  
     |  encoding
     |      Encoding of the text stream.
     |      
     |      Subclasses should override.
     |  
     |  errors
     |      The error setting of the decoder or encoder.
     |      
     |      Subclasses should override.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from _io._IOBase:
     |  
     |  __enter__(...)
     |  
     |  __exit__(...)
     |  
     |  __iter__(...)
     |      x.__iter__() <==> iter(x)
     |  
     |  fileno(...)
     |      Returns underlying file descriptor if one exists.
     |      
     |      An IOError is raised if the IO object does not use a file descriptor.
     |  
     |  flush(...)
     |      Flush write buffers, if applicable.
     |      
     |      This is not implemented for read-only and non-blocking streams.
     |  
     |  isatty(...)
     |      Return whether this is an 'interactive' stream.
     |      
     |      Return False if it can't be determined.
     |  
     |  readlines(...)
     |      Return a list of lines from the stream.
     |      
     |      hint can be specified to control the number of lines read: no more
     |      lines will be read if the total size (in bytes/characters) of all
     |      lines so far exceeds hint.
     |  
     |  writelines(...)

FUNCTIONS
    json_to_stream(data)
        Convert data to json stream
    
    pickle_to_stream(data)
        Convert data to pickle stream
    
    yaml_to_stream(data)
        Convert data to yaml stream


